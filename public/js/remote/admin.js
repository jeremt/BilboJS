// Generated by CoffeeScript 1.3.3
var closeBtn, currentSlide, currentSlideTime, currentTime, display, displayDigit, displayTime, getKey, grid, optionBtn, options, remote, toOption, toRemote,
  __indexOf = [].indexOf || function(item) { for (var i = 0, l = this.length; i < l; i++) { if (i in this && this[i] === item) return i; } return -1; };

currentSlide = 1;

currentTime = 0;

currentSlideTime = 0;

getKey = function() {
  var key;
  key = $(this).html();
  switch (key) {
    case '→':
    case '↓':
      currentSlide++;
      currentSlideTime = 0;
      break;
    case '←':
    case '↑':
      currentSlide--;
      currentSlideTime = 0;
  }
  if (key && key !== ' ') {
    return now.getKey(key);
  }
};

$('#key-map > button').on((__indexOf.call(document, 'touchstart') >= 0 ? 'tap' : 'click'), getKey);

grid = function() {
  var btnHeight, btnWidth, winHeight, winWidth;
  winWidth = document.body.clientWidth;
  winHeight = window.innerHeight;
  btnWidth = winWidth / 3 - 6;
  btnHeight = (winHeight - 100) / 3 - 6;
  $('body').css('overflow', 'hidden');
  $('.remote-page').css({
    width: winWidth,
    height: winHeight
  });
  $('#key-map').css({
    position: 'absolute',
    bottom: 0,
    width: winWidth,
    height: winHeight - 100
  });
  $('#key-map > button').css({
    width: btnWidth,
    height: btnHeight,
    margin: 2
  });
  return $('#key-map > button:last-child').css({
    margin: 0
  });
};

$(grid);

$('body').on('change', grid);

$(window).on('resize', grid);

displayDigit = function(num) {
  if (num < 10) {
    return '0' + num;
  } else {
    return num;
  }
};

displayTime = function(num) {
  var m, s;
  m = ~~(num / 60);
  s = ~~(num % 60);
  return displayDigit(m) + ':' + displayDigit(s);
};

display = function() {
  currentTime++;
  currentSlideTime++;
  $('#remote > hgroup > h1').text(displayTime(currentTime));
  $('#remote > hgroup > h2').text(displayTime(currentSlideTime));
  return $('#remote > hgroup > h3').text('slide ' + currentSlide);
};

setInterval(display, 1000);

options = $('#options');

remote = $('#remote');

optionBtn = $('#option-btn');

closeBtn = $('#close-btn');

toRemote = function() {
  options.hide();
  optionBtn.show();
  remote.show();
  return closeBtn.hide();
};

toOption = function() {
  options.show();
  remote.hide();
  closeBtn.show();
  return optionBtn.hide();
};

optionBtn.click(toOption);

$('#save > button').click(toRemote);

closeBtn.click(toRemote);

$('#options > select').on('change', function() {
  var selector, val;
  val = this[this.selectedIndex].value;
  selector = '#' + $(this).prop('id').split('-')[1];
  return $(selector).html(val);
});
